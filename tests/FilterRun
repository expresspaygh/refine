<?php

require_once(__DIR__."/FilterCases.php");

/**
 * FilterTests
 */
class FilterTests
{
  /**
   * Include filter test cases trait
  */
  use FilterCases;
  /**
   * argname
   *
   * @var array
   */
  private $argnames=array();    
  /**
   * request
   *
   * @var array
   */
  private $request=array();    
  /**
   * options
   *
   * @var array
   */
  private $options=array();
      
  /**
   * __construct
   *
   * @param  mixed $arg
   * @return void
   */
  public function __construct(array $args=null)
  {
    $this->argnames=$args;
  }
  
  /**
   * getLine
   *
   * @return void
   */
  private function getLine()
  {
    $out="";
    for($l=0;$l<15;$l++)
    {
      $out.="*";
    }
    return $out;
  }
    
  /**
   * printer
   *
   * @param  mixed $case
   * @param  mixed $output
   * @return void
   */
  private function printer(string $case,array $output)
  {
    error_log(PHP_EOL);
    $ruler=$this->getLine();
    error_log($ruler);
    error_log("$case:\n");
    error_log(print_r($output,true));
    error_log($ruler);
    error_log(PHP_EOL);
  }
  
  /**
   * init
   *
   * @return void
   */
  public function init()
  {
    if(!empty($this->argnames))
    {
      foreach($this->argnames as $method)
      {
        $output=call_user_func([__CLASS__,$method]);
        $this->printer($method,$output);
      }
    }else{
      error_log("Kindly provide a test case");
    }
  }
}

// check if console args exist
if (isset($argv)&&!empty($argv))
{
  // remove called file value
  unset($argv[0]);
  // call test calls and pass arguments
  $refineTest=new FilterTests($argv);
  $refineTest->init();
}else{
  error_log("Kindly globalize the argument accessor in your php.ini - 'argv'");
}

// end
exit("Shutting down...\n\n");

